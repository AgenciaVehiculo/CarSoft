/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Pantallas;
import Clases.Acceso;
import Clases.Cliente;
import Clases.Empleado;
import Clases.Hash;
import Clases.Persona;
import Clases.Usuarios;
import JPAController.AccesoJpaController;
import JPAController.EmpleadoJpaController;
import JPAController.PersonaJpaController;
import JPAController.UsuariosJpaController;
import com.sun.glass.events.KeyEvent;
import java.awt.*;
import java.io.IOException;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import java.util.List;
import java.util.logging.FileHandler;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.logging.SimpleFormatter;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;

/**
 *
 * @author Kur013
 */
public class IniciodeSesion extends javax.swing.JFrame {

    /**
     * Creates new form IniciodeSesion
     */
    
    private Component confirm;
    EntityManagerFactory emf =Persistence.createEntityManagerFactory("CarSoft");
      UsuariosJpaController  usuarioDao = new UsuariosJpaController(emf);
      PersonaJpaController personaDao= new PersonaJpaController(emf);
      EmpleadoJpaController empleadoDao = new EmpleadoJpaController(emf);
      AccesoJpaController accesoDao = new AccesoJpaController(emf);
      private String user, password;
      
    public IniciodeSesion() {
        initComponents();
        setIconImage(new ImageIcon(getClass().getResource("/Img/CarSoft-removebg-preview.png")).getImage());
         txt_usuario.setFocusable(true);
        this.setExtendedState(MAXIMIZED_BOTH);
        this.btnIngresar.setBackground( new Color(14, 209, 69));
        this.btnSalir.setBackground( new Color(236, 28, 36));
        labelEmple1.setVisible(false);
        this.getContentPane().setBackground(new Color(0, 75, 143));
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btn_password = new javax.swing.JPasswordField();
        txt_usuario = new javax.swing.JTextField();
        labelEmple1 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnIngresar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        btnSalir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btn_password.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_passwordActionPerformed(evt);
            }
        });
        btn_password.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                btn_passwordKeyTyped(evt);
            }
        });
        getContentPane().add(btn_password, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 420, 144, 30));

        txt_usuario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_usuarioKeyTyped(evt);
            }
        });
        getContentPane().add(txt_usuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 380, 144, 30));

        labelEmple1.setText("jLabel5");
        getContentPane().add(labelEmple1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 130, 340, -1));

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Usuario:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 390, 70, -1));

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Contraseña:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 430, 70, -1));

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setIcon(new javax.swing.ImageIcon("C:\\CarSoft-Version-2.1\\src\\main\\resources\\Img\\CarSoft-removebg-preview.png")); // NOI18N
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 19, 240, 190));

        btnIngresar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnIngresar.setIcon(new javax.swing.ImageIcon("C:\\CarSoft-Version-2.1\\src\\main\\resources\\Img\\Ingresar.png")); // NOI18N
        btnIngresar.setText("Ingresar");
        btnIngresar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnIngresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIngresarActionPerformed(evt);
            }
        });
        getContentPane().add(btnIngresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 500, 170, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Inicio de Sesión");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 325, 240, -1));

        btnSalir.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnSalir.setIcon(new javax.swing.ImageIcon("C:\\CarSoft-Version-2.1\\src\\main\\resources\\Img\\Salir.png")); // NOI18N
        btnSalir.setText("Salir");
        btnSalir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        getContentPane().add(btnSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(1243, 19, 110, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_passwordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_passwordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_passwordActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
         System.exit(0);
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnIngresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIngresarActionPerformed
        try{
        InicioSesion();
        }catch(Exception e){
            try {
                Calendar fecha = new GregorianCalendar();
                String fecha1;
                String aux1,aux2,aux3;
                aux1 = Integer.toString(fecha.get(Calendar.YEAR));
                aux2 = (fecha.get(Calendar.MONTH)<10)? "0"+(Integer.toString(fecha.get(Calendar.MONTH)+1)) : Integer.toString(fecha.get(Calendar.MONTH));
                switch(aux2){
                    case "01":
                        aux2= "01";
                        break;
                    case "02":
                        aux2= "02";
                        break;case "03":
                            aux2= "03";
                            break;case "04":
                                aux2= "04";
                                break;case "05":
                                    aux2= "05";
                                    break;case "06":
                                        aux2= "06";
                                        break;case "07":
                                            aux2= "07";
                                            break;case "08":
                                                aux2= "08";
                                                break;case "09":
                                                    aux2= "09";
                                                    break;
                                                case "010":
                                                    aux2= "10";
                                                    break;
                                                case "011":
                                                    aux2= "11";
                                                    break;
                                                case "012":
                                                    aux2= "12";
                                                    break;
                                                default:
                                                    break;
                }
                aux3 = (fecha.get(Calendar.DAY_OF_MONTH)<10)? "0"+Integer.toString(fecha.get(Calendar.DAY_OF_MONTH)) : Integer.toString(fecha.get(Calendar.DAY_OF_MONTH));
                fecha1 = aux1+"-"+aux2+"-"+aux3+" "+fecha.get(Calendar.HOUR_OF_DAY)+" "+fecha.get(Calendar.MINUTE)+" "+fecha.get(Calendar.SECOND);
                Logger logger = Logger.getLogger(IniciodeSesion.class.getName());
                FileHandler fh = null;
                fh = new FileHandler("./"+"Login"+fecha1+".log");
                logger.addHandler(fh);
                fh.setFormatter(new SimpleFormatter());
                logger.setLevel(Level.WARNING);
                logger.log(Level.SEVERE,e.getMessage());
                fh.close();
            } catch (IOException | SecurityException ex) {
                Logger.getLogger(IniciodeSesion.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnIngresarActionPerformed
public boolean InicioSesion(){
     if (txt_usuario.getText().equals("") && btn_password.getText().equals("")){
            JOptionPane.showMessageDialog(this,"Usuario y contraseña estan vacios\nIngrese su usuario y contraseña","Error!", JOptionPane.ERROR_MESSAGE);
            txt_usuario.setFocusable(true);
            return false;
       }
       else{
           
       }
       if (txt_usuario.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Usuario esta vacio\nIngrese su usuario","Error!", JOptionPane.ERROR_MESSAGE);
            txt_usuario.setFocusable(true);
            return false;
       }
       else{
           
       }
       if (btn_password.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Contraseña esta vacio\nIngrese su contraseña","Error!", JOptionPane.ERROR_MESSAGE);
            btn_password.setFocusable(true);
            return false;
        }
       java.util.List<Usuarios> temp;
       temp = usuarioDao.findUsuariosEntities();
       for(Usuarios u : temp){
       if(u.getId_Nombre().equals(txt_usuario.getText())){
            u= usuarioDao.findUsuarios(u.getId_Usuario());
            if(u.isEstado()!=true){
            JOptionPane.showMessageDialog(null,"Este usuario esta bloqueado, por favor comunicarse con el Gerente","Información", JOptionPane.INFORMATION_MESSAGE); 
            return false;
        }
       }
       }
        boolean flag = false;
        boolean flag2 = false;
        boolean flag3 = false;
        int valorDeUsuario=0;
        for(Usuarios u : temp){
            if(u.getId_Nombre().equals(txt_usuario.getText())){
                flag=true;
                if(u.getContraseña().equals(Hash.getHash(btn_password.getText()))){
                    flag2=true;
                    if(u.isEstado()){
                        flag3=true;
                        valorDeUsuario=u.getId_Usuario();
                    }                   
                }   
            }
        }
        if(flag && flag2 && flag3){
            FrmMenu menu = new FrmMenu(valorDeUsuario);
//            FrmEmpleados empleados = new FrmEmpleados();
//            FrmCliente clientes = new FrmCliente();
            menu.setVisible(true);
            List<Acceso> tempa = accesoDao.findAccesoEntities();
            Empleado temp2 = new Empleado();
            Persona temp3 = new Persona();
            for(Usuarios u : temp){
                if(u.getId_Nombre().equals(txt_usuario.getText())){
                    temp2=empleadoDao.findEmpleado(u.getId_Empleado());
                    temp3=personaDao.findPersona(temp2.getId_Persona());
                    u.setIntentos(0);
                for(Acceso tpp: tempa){
                if(tpp.getIdUsuario()==u.getId_Usuario()){
                if(tpp.getPermisoMenuClientes()==false){
                    FrmMenu.btnClientes.setEnabled(false);
                    FrmMenu.btnClientes.setBackground(new java.awt.Color(236, 28, 36));
                }
                if(tpp.getPermisoMenuEmpleados()==false){
                    FrmMenu.btnEmpleados.setEnabled(false);
                    FrmMenu.btnEmpleados.setBackground(new java.awt.Color(236, 28, 36));
                }
                if(tpp.getPermisoMenuVentas()==false){
                    FrmMenu.btnVentas.setEnabled(false);
                    FrmMenu.btnVentas.setBackground(new java.awt.Color(236, 28, 36));
                    
                }
                if(tpp.getPermisoMenuPedidos()==false){
                    FrmMenu.btnPedidos.setEnabled(false);
                    FrmMenu.btnPedidos.setBackground(new java.awt.Color(236, 28, 36));
                }
                if(tpp.getPermisoMenuPiezas()==false){
                    FrmMenu.btnPiezas.setEnabled(false);
                    FrmMenu.btnPiezas.setBackground(new java.awt.Color(236, 28, 36));
                }
                if(tpp.getPermisoMenuVehiculos()==false){
                    FrmMenu.btnVehículos.setEnabled(false);
                    FrmMenu.btnVehículos.setBackground(new java.awt.Color(236, 28, 36));
                }
                if(tpp.getPermisoMenuBancos()==false){
                    FrmMenu.btnBancos.setEnabled(false);
                    FrmMenu.btnBancos.setBackground(new java.awt.Color(236, 28, 36));
                }
                
                /*if(tpp.getPermisoSeccionEmpleadosAgregar()==false){
                    empleados.btnAgregar1.setVisible(false);
                }
                if(tpp.getPermisoSeccionEmpleadosModificar()==false){
                    empleados.btnModificar1.setVisible(false);
                }
                if(tpp.getPermisoSeccionEmpleadosDesactivar()==false){
                    empleados.btnDesactivar1.setVisible(false);
                }
                if(tpp.getPermisoSeccionEmpleadosBuscar()==false){
                    empleados.btnBuscar1.setVisible(false);
                }
                if(tpp.getPermisoSeccionEmpleadosReportePdf()==false){
                    empleados.btnGenerar10.setVisible(false);
                }
                if(tpp.getPermisoSeccionEmpleadosReporteExcel()==false){
                    empleados.btnGenerar9.setVisible(false);
                }
                
                if(tpp.getPermisoSeccionCargosAgregar()==false){
                    empleados.btnAgregar2.setVisible(false);
                }
                if(tpp.getPermisoSeccionCargosModificar()==false){
                    empleados.btnModificar2.setVisible(false);
                }
                if(tpp.getPermisoSeccionCargosDesactivar()==false){
                    empleados.btnDesactivar2.setVisible(false);
                }
                if(tpp.getPermisoSeccionCargosReportePdf()==false){
                    empleados.btnGenerar.setVisible(false);
                }
                if(tpp.getPermisoSeccionCargosReporteExcel()==false){
                    empleados.btnGenerar2.setVisible(false);
                }
                
                
                if(tpp.getPermisoSeccionUsuariosAgregar()==false){
                    empleados.btnAgregar.setVisible(false);
                }
                if(tpp.getPermisoSeccionUsuariosModificar()==false){
                    empleados.btnModificar.setVisible(false);
                }
                if(tpp.getPermisoSeccionUsuariosDesactivar()==false){
                    empleados.btnDesactivar.setVisible(false);
                }
                if(tpp.getPermisoSeccionUsuariosBuscarUsuario()==false){
                    empleados.btnBuscar.setVisible(false);
                }
                if(tpp.getPermisoSeccionUsuariosBuscarEmpleado()==false){
                    empleados.btnBuscar2.setVisible(false);
                }
                if(tpp.getPermisoSeccionUsuariosReportePdf()==false){
                    empleados.btnGenerar4.setVisible(false);
                }
                if(tpp.getPermisoSeccionUsuariosReporteExcel()==false){
                    empleados.btnGenerar3.setVisible(false);
                }
                
                if(tpp.getPermisoSeccionHistorialSueldosReportePdf()==false){
                    empleados.btnGenerar6.setVisible(false);
                }
                if(tpp.getPermisoSeccionHistorialSueldosReporteExcel()==false){
                    empleados.btnGenerar5.setVisible(false);
                }
                
                if(tpp.getPermisoSeccionHistorialCargosReportePdf()==false){
                    empleados.btnGenerar8.setVisible(false);
                }
                if(tpp.getPermisoSeccionHistorialCargosReporteExcel()==false){
                    empleados.btnGenerar7.setVisible(false);
                }*/
                }
                
               /* if(tpp.getPermisoSeccionClientesAgregar()==false){
                    clientes.btnAgregar.setVisible(false);
                }
                if(tpp.getPermisoSeccionClientesModificar()==false){
                    clientes.btnModificar.setVisible(false);
                }
                if(tpp.getPermisoSeccionClientesDesactivar()==false){
                    clientes.btnDesactivar.setVisible(false);
                }
                if(tpp.getPermisoSeccionClientesBuscar()==false){
                    clientes.btnBuscar2.setVisible(false);
                }
                if(tpp.getPermisoSeccionClientesReportePdf()==false){
                    clientes.btnImprimirReportePdf.setVisible(false);
                }
                if(tpp.getPermisoSeccionClientesReporteExcel()==false){
                    clientes.btnImprimirReporteExcel.setVisible(false);
                }
                
                if(tpp.getPermisoSeccionTipoDocumentoAgregar()==false){
                    clientes.btnAgregar.setVisible(false);
                }
                if(tpp.getPermisoSeccionTipoDocumentoModificar()==false){
                    clientes.btnModificar.setVisible(false);
                }
                if(tpp.getPermisoSeccionTipoDocumentoDesactivar()==false){
                    clientes.btnDesactivar.setVisible(false);
                }
                if(tpp.getPermisoSeccionTipoDocumentoReportePdf()==false){
                    clientes.btnImprimirReportePdf1.setVisible(false);
                }
                if(tpp.getPermisoSeccionTipoDocumentoReporteExcel()==false){
                    clientes.btnImprimirReporteExcel1.setVisible(false);
                }*/
                
            }
        try {
                     usuarioDao.edit(u);
        } catch (Exception ex) {
            Logger.getLogger(FrmPieza.class.getName()).log(Level.SEVERE, null, ex);
        }
                }
            }   
            FrmMenu.txtBienvenido.setText("Bienvenido "+temp3.getNombre()+" "+temp3.getApellido());
            FrmMenu.lIDEmpleado.setText(String.valueOf(temp2.getId_Empleado()));
            FrmMenu.labelEmple1.setText(temp3.getNombre()+" "+temp3.getApellido());
            FrmMenu.btnSeguridad.setVisible(false);
            this.dispose();
            
        }
        else if (flag && !flag2){
            
            
            
            
            for(Usuarios u : temp){
            if(u.getId_Nombre().equals(txt_usuario.getText())){
            u= usuarioDao.findUsuarios(u.getId_Usuario());
            int aux= u.getIntentos()+1;
            u.setIntentos(aux); 
            
                if(u.getIntentos()>=3){
                JOptionPane.showMessageDialog(null, "Esta cuenta ha sido bloqueada por intentar acceder sin exito 3 veces","Error!", JOptionPane.ERROR_MESSAGE);
                 u.setEstado(false); 
                 return false;
                }
                if(u.getIntentos()<=2){
                JOptionPane.showMessageDialog(this, "La contraseña no es valida\n Ingrese su contraseña","Contraseña Incorrecta", JOptionPane.ERROR_MESSAGE);
                 btn_password.setFocusable(true);  
                 return false;
                }
            try {
            usuarioDao.edit(u);
            } catch (Exception ex) {
            Logger.getLogger(IniciodeSesion.class.getName()).log(Level.SEVERE, null, ex);
            }       
            }
             
            }
            }
        else if (flag && flag2 && !flag3){
            JOptionPane.showMessageDialog(this,"Cuenta inactiva, pongase en contacto con el Gerente o departamento de TI","Error!", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        
        else if(!flag){
            if("root".equals(txt_usuario.getText())){
                if("admin".equals(btn_password.getText())){
                    FrmMenu menu = new FrmMenu(0);
                    FrmMenu.btnSeguridad.setVisible(true);
                    FrmMenu.txtBienvenido.setText("Bienvenido Administrador Principal");
                    menu.setVisible(true);
                    this.setVisible(false);
                }
            }
            else{
            JOptionPane.showMessageDialog(this, "Usuario no encontrado en el sistema, Asegurese que su Usuario este escrito correctamente","Error!", JOptionPane.ERROR_MESSAGE);
                return false;
            }
        }
        return true;
}
    private void txt_usuarioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_usuarioKeyTyped
                char c = evt.getKeyChar();
        if((c < 'a' || c > 'z') && (c != '.')&&(c < '0' || c > '9')&& (c < 'A' || c > 'Z'&& c != 'Ñ' && c != 'ñ' && c != 'Á' && c != 'É' && c != 'Í' && c != 'Ó' && c != 'Ú' && c != 'á' && c != 'é' && c != 'í' && c != 'ó' && c != 'ú')){

            evt.consume();

        }
              
        if (txt_usuario.getText().length() >= 25){
        
        evt.consume();
        
        }
        
    }//GEN-LAST:event_txt_usuarioKeyTyped

    private void btn_passwordKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btn_passwordKeyTyped
       char c = evt.getKeyChar();
        if((c < 'a' || c > 'z') && (c != '@'&& c != '#' && c != '$' && c != '%' &&c != '^' && c != '&' && c != '+' && c != '=' )&&(c < '0' || c > '9')&& (c < 'A' || c > 'Z'&& c != 'Ñ' && c != 'ñ' && c != 'Á' && c != 'É' && c != 'Í' && c != 'Ó' && c != 'Ú' && c != 'á' && c != 'é' && c != 'í' && c != 'ó' && c != 'ú') ){

            evt.consume();

        }
        if (btn_password.getText().length() >= 15){
        
        evt.consume();
        
        }
    }//GEN-LAST:event_btn_passwordKeyTyped

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIngresar;
    private javax.swing.JButton btnSalir;
    public javax.swing.JPasswordField btn_password;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    public javax.swing.JLabel labelEmple1;
    public javax.swing.JTextField txt_usuario;
    // End of variables declaration//GEN-END:variables
}
